/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package proyecto1;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jcsp.lang.Any2AnyChannel;
import org.jcsp.lang.Any2OneChannel;
import org.jcsp.lang.Channel;
import org.jcsp.lang.One2OneChannel;
import org.jcsp.util.Buffer;

/**
 *
 * @author danie
 */
public class Mina extends java.awt.Frame {

    /**
     * Creates new form Mina
     */
    public Mina() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        Any2OneChannel cargaPoco = Channel.any2one(new Buffer(2));
        Any2OneChannel cargaMucho = Channel.any2one(new Buffer(1));
        Any2OneChannel recarga = Channel.any2one(new Buffer(1));
        One2OneChannel permiso [] = new One2OneChannel[3];
        
        for (int i = 0; i < 3; i++) {
            permiso[i] = Channel.one2one(new Buffer(1));
        }
        
        try {
            Random rnd = new Random();
            rnd.setSeed(System.currentTimeMillis());

            Grande grande = new Grande(cargaMucho, permiso[2],2);
            Thread cargadoras[] = new Thread[3];
            
            cargadoras[0] = new Pequenia(cargaPoco, permiso[0],0);
            cargadoras[1] = new Pequenia(cargaPoco, permiso[1],1);
            cargadoras[2] = new Thread(grande);
            
            Cinta c = new Cinta(recarga, 4);
            Controlador cc = new Controlador(cargaPoco, cargaMucho, recarga, permiso);
            cc.start();
            
            for (int i = 0; i < 3; i++) {
                cargadoras[i].start();
            }
            c.start();

            for (int i = 0; i < 2; i++) {
                cargadoras[i].join();
            }

            c.interrupt();
            c.join();
            System.out.println("Fin del programa");
            System.exit(0);

        } catch (InterruptedException ex) {
            Logger.getLogger(Mina.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
