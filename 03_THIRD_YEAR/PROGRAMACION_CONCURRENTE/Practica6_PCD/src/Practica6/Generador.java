/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package Practica6;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.concurrent.Semaphore;

/**
 *
 * @author usuario
 */
public class Generador extends java.awt.Frame {

    /**
     * Creates new form Generador
     */
    public Generador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     * @throws java.lang.InterruptedException
     */
    public static void main(String args[]) throws InterruptedException {

        int numcafe = 30, ancho = 1000, alto = 720;
        Semaphore leche = new Semaphore(10);
        Semaphore cafe = new Semaphore(10);
        Semaphore papelera = new Semaphore(1);
        Semaphore salaLeche = new Semaphore(3);
        Semaphore salaCafe = new Semaphore(3);

        Generador f = new Generador();
        f.setSize(ancho, alto);
        f.setTitle("Practica 6 PCD");
        f.setLocation(500, 100);

        CanvasCongreso cc = new CanvasCongreso(ancho, alto);
        f.add(cc);
        f.setVisible(true);

        Thread[] asistentes = new Thread[numcafe];
        Manchado m;
        Random rnd = new Random();

        rnd.setSeed(System.currentTimeMillis());
            Camarero c = new Camarero(cc, leche, cafe);
            c.start();
            for (int i = 0; i < numcafe; i++) {
                if (rnd.nextInt(100) < 50) {
                    asistentes[i] = new Cortado(cc, leche, cafe, papelera, salaLeche, salaCafe);
                    asistentes[i].start();
                } else {
                    m = new Manchado(cc, leche, cafe, papelera, salaLeche, salaCafe);
                    asistentes[i] = new Thread(m);
                    asistentes[i].start();
                }
                Thread.sleep(500);
            }
            for (int i = 0; i < numcafe; i++) {
                asistentes[i].join();
            }
            
            c.interrupt();
            c.join();
            System.out.println("Fin del programa");
            System.exit(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
