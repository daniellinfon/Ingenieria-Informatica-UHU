CREATE TABLE COMPAÑIA (
cif char(9),
nombre varchar(20),
web varchar(30),
CONSTRAINT cif_clave PRIMARY KEY (cif)
);

CREATE TABLE TARIFA (
tarifa char(10),
compañia char(9),
descripcion varchar(50),
coste number(3,2),
CONSTRAINT tarifa_clave PRIMARY KEY (tarifa,compañia),
CONSTRAINT tarifa_comp FOREIGN KEY(compañia) REFERENCES COMPAÑIA(cif)
);

CREATE TABLE CLIENTE (
dni char(9),
nombre varchar(50),
f_nac DATE,
direccion varchar(100),
cp char(6),
ciudad varchar(50),
provincia varchar(50),
CONSTRAINT dni_clave PRIMARY KEY (dni)
);

CREATE TABLE TELEFONO (
numero char(9),
f_contrato DATE,
tipo char(1),
puntos number(6,0),
compañia char(9),
tarifa char(10),
cliente char(9),
CONSTRAINT numero_clave PRIMARY KEY (numero),
CONSTRAINT telefono_comp_tarif FOREIGN KEY(tarifa,compañia) REFERENCES TARIFA,
CONSTRAINT telefono_comp FOREIGN KEY(compañia) REFERENCES COMPAÑIA(cif),
CONSTRAINT telefono_cliente FOREIGN KEY(cliente) REFERENCES CLIENTE(dni),
CONSTRAINT tipos_validos
CHECK(tipo IN('T','C'))
);

CREATE TABLE LLAMADA (
tf_origen char(9),
tf_destino char(9),
fecha_hora timestamp,
duracion number(5,0),
CONSTRAINT tforigen_fechayhora_clave PRIMARY KEY (tf_origen,fecha_hora),
CONSTRAINT llamada_tforigen FOREIGN KEY(tf_origen) REFERENCES TELEFONO(numero),
CONSTRAINT llamada_tfdestino FOREIGN KEY(tf_destino) REFERENCES TELEFONO(numero),
CONSTRAINT tfdest_no_fechayhora UNIQUE (tf_destino, fecha_hora)
);

--No puede haber dos compañías con el mismo nombre.
ALTER TABLE COMPAÑIA
  ADD CONSTRAINT ciaUnica UNIQUE(nombre);
-- Un teléfono no puede realizar una llamada a él mismo.
ALTER TABLE LLAMADA
  ADD CONSTRAINT LlamadaTfDistintos CHECK (tf_origen<>tf_destino);
-- El coste de las tarifas no puede ser superior a 1,50 e inferior a 0,05.
ALTER TABLE TARIFA
  ADD CONSTRAINT tarifaCoste CHECK (coste<=1.5 AND coste>=0.05);
-- Los atributos nombre de la tabla Compañía, nombre de la relación Cliente, coste de la relación Tarifa, compañía y tarifa de la tabla Teléfono y duración de la tabla Llamada deben ser obligatorios.
ALTER TABLE COMPAÑIA
  MODIFY  nombre varchar(20) NOT NULL;
  
ALTER TABLE CLIENTE
  MODIFY  nombre varchar(50) NOT NULL;
  
ALTER TABLE TELEFONO
  MODIFY compañia char(9) NOT NULL
  MODIFY tarifa char(10) NOT NULL;
  
ALTER TABLE TARIFA
  MODIFY  coste number(3,2) NOT NULL;
  
ALTER TABLE LLAMADA
  MODIFY  duracion number(5,0) NOT NULL;
  
-- Al borrar una compañía se deben borrar además todas las tarifas de dicha compañía
ALTER TABLE TARIFA DROP CONSTRAINT tarifa_comp
ALTER TABLE TARIFA
  ADD CONSTRINT borrar_tarifas FOREIGN KEY(compañia) REFERENCES COMPAÑIA(cif) ON DELETE CASCADE;
  
--Sesion 2
3)

INSERT INTO COMPAÑIA
VALUES ('A00000001', 'Kietostar', 'http://www.kietostar.com');

INSERT INTO COMPAÑIA
VALUES ('B00000002', 'Aotra','http://www.aotra.com');

INSERT INTO TARIFA
VALUES ('joven', 'A00000001', 'menores de 25 años', '0,25');

INSERT INTO TARIFA
VALUES ('dúo', 'A00000001', 'la pareja también está en la compañía', '0,20');
INSERT INTO TARIFA
VALUES ('familiar', 'A00000001', '4 miembros de la familia en la compañía', '0,15');

INSERT INTO TARIFA
VALUES ('autónomos', 'B00000002', 'trabajador autónomo', '0,12');

INSERT INTO TARIFA
VALUES ('dúo', 'B00000002', 'la pareja también está en la compañía', '0,15');

4)
INSERT INTO COMPAÑIA 
VALUES ('A00000001', 'Petafón', 'http://www.petafón.com');

INSERT INTO COMPAÑIA
VALUES ('C00000003', 'Aotra', 'http://www.aot.com');

INSERT INTO TARIFA
VALUES ('joven', 'D00000004', 'menores de 21 años', '0,20');

INSERT INTO TARIFA
VALUES ('dúo', 'B00000002', 'la pareja también está en la compañía', '0,18');

INSERT INTO TARIFA
VALUES ('amigos', 'B00000002', '10 amigos están también en la compañía', '1,60');

5)
DELETE FROM COMPAÑIA
WHERE cif = 'B00000002';



--PRACTICA 2
--SESION 1  
/*S1.1 Obtener el nombre de las compañías cuya dirección web contenga la cadena ‘et’ y acabe en ‘com’*/
SELECT *
FROM MF.COMPAÑIA c
WHERE c.nombre LIKE '%et%' and c.web LIKE '%com';

--S1.2 Obtener el nombre y dirección de los clientes nacidos en 1973 o 1985 y cuyo código postal comience por
--15, ordenado ascendentemente por el nombre y, en caso de igualdad, descendentemente por la dirección
SELECT nombre,direccion, extract(year from (F_NAC)) as FechaNac, cp
FROM MF.CLIENTE c
WHERE EXTRACT(year from (c.F_NAC)) IN (1973, 1985) AND CP LIKE '15%'
ORDER BY NOMBRE asc, DIRECCION DESC;

--S1.3 Obtener el teléfono de destino de las llamadas realizadas desde el número “666010101”, en el año 2006.
SELECT t.tf_destino
FROM MF.LLAMADA t
WHERE T.TF_ORIGEN = '666010101' AND extract(year from FECHA_HORA) like '2006';

--S1.4 Obtener los números de teléfono que han llamado alguna vez al “666010101”, entre las 10:00 y las 12:00

SELECT tf_origen, fecha_hora, to_char(fecha_hora, 'HH:MI') as HORA
from MF.llamada ll
where ll.tf_destino='666010101' and extract(hour from fecha_hora)>=10 and extract(hour from fecha_hora)<=12;

--S1.5 Obtener las tarifas distintas de aquellos clientes cuyo dni contiene el número 2 y tienen entre 10000 y
--20000 puntos, pero que son de contrato, no tarjeta de prepago.

select distinct t.cliente,t.tarifa, t.puntos,t.tipo
from mf.telefono t
where t.cliente like '%2%' and t.puntos between 10000 and 20000 and t.tipo='C';

--S1.6 Obtener los números de teléfonos junto a su tarifa, cuya fecha de contrato es en mayo (cualquier día y
--año), con tarifa distinta de joven, y que acaban en 9, ordenados por puntos descendentemente.

select numero,tarifa, puntos, f_contrato
from mf.telefono
where extract(month from f_contrato)=5 and numero like '%9' and tarifa not like '%joven%'
order by puntos desc;

--S1.7 Obtener los distintos teléfonos a los que se han llamado desde el ‘654345345’ durante el mes de octubre y
--noviembre, cuyas llamadas hayan tenido una duración superior a los 250 segundos.

select distinct tf_destino,to_char(fecha_hora,'dd/mm/yyyy') as Fecha, duracion
from mf.llamada
where tf_origen = '654345345' and extract(month from fecha_hora) in (10,11) and duracion > 250;

--S1.8 Obtener los nombres de los clientes que nacieron entre 1970 y 1985 y que pertenezcan a la provincia de
--Huelva, ordenados ascendentemente por ciudad y descendentemente por provincia

SELECT nombre
FROM mf.cliente
WHERE (extract (year from f_nac) BETWEEN 1970 and 1985) and provincia = 'Huelva' 
order by ciudad asc, provincia desc;

--SESION 2

--S2.1 Mostrar el código y coste de las tarifas junto con el nombre de la compañía que las ofrecen, de aquellas
--tarifas cuya descripción indique que otras personas deben estar también en la misma compañía

SELECT tar.tarifa, tar.coste, cia.nombre
FROM MF.COMPAÑIA cia inner join MF.TARIFA tar ON cia.cif=tar.compañia
where tar.descripcion like '%compañía%';

--S2.2 Nombre y número de teléfonos de aquellos abonados con contrato que tienen tarifas inferiores a 0,20 €.
SELECT cli.nombre, tlf.numero
FROM (MF.CLIENTE cli inner join MF.TELEFONO tlf on cli.DNI=tlf.CLIENTE) inner join MF.TARIFA tar using(tarifa,compañia)
WHERE tar.coste<0.2 and tlf.TIPO='C';

--S2.3 Obtener el código de las tarifas, el nombre de las compañías, los números de teléfono y los puntos, de
--aquellos teléfonos que se contrataron en el año 2006 y que hayan obtenido más de 200 puntos
SELECT tarifa, cia.nombre, tlf.numero, tlf.puntos, extract(year from tlf.f_contrato) as AñoContrat
FROM (MF.TARIFA tar inner join MF.COMPAÑIA cia on cia.cif=tar.compañia) inner join MF.TELEFONO tlf using(tarifa,compañia)
WHERE extract (year from tlf.f_contrato)=2006 and tlf.PUNTOS>200;

--S2.4 Obtener los números de teléfono (origen y destino), así como el tipo de contrato, de los clientes que alguna
--vez hablaron por teléfono entre las 8 y las 10 de la mañana
SELECT tlf.NUMERO origen, tlf.TIPO, tlf2.NUMERO destino, tlf2.TIPO, to_char(L.fecha_hora, 'hh24:mi')Hora, extract(hour from fecha_hora)
FROM (MF.LLAMADA L inner join MF.TELEFONO tlf on L.TF_ORIGEN=tlf.NUMERO)inner join MF.TELEFONO tlf2 on tlf2.NUMERO=L.TF_DESTINO
WHERE extract(hour from fecha_hora) >= 8 and extract(hour from fecha_hora) < 10
order by extract(hour from fecha_hora);

--S2.5 Interesa conocer los nombres y números de teléfono de los clientes (origen y destino) que, perteneciendo
--a compañías distintas, mantuvieron llamadas que superaron los 15 minutos. Se desea conocer, también, la
--fecha y la hora de dichas llamadas así como la duración de esas llamadas

SELECT co.nombre "Cliente Origen", l.tf_origen, tfo.compañia, cd.nombre "Cliente Destino", l.tf_destino, tfd.compañia, l.fecha_hora, l.duracion
FROM (((mf.cliente co inner join mf.telefono tfo on co.dni=tfo.cliente)inner join mf.llamada l on tfo.numero=l.tf_origen)
      inner join mf.telefono tfd on tfd.numero=l.tf_destino)inner join mf.cliente cd on cd.dni=tfd.cliente
WHERE l.duracion >900 and tfo.compañia <> tfd.compañia;
     
--SESION 3
  
--S3.1 Obtener la fecha (día-mes-año) en la que se realizó la llamada de mayor duración

SELECT TO_CHAR(fecha_hora, 'dd/mm/yyyy') Fecha
from mf.llamada
WHERE duracion >= all(select distinct duracion from mf.llamada);

--S3.2 Obtener el nombre de los abonados de la compañía ‘Aotra’ con el mismo tipo de tarifa que la del telefono '654123321'

SELECT c.nombre, t.numero, comp.nombre
from(mf.cliente c inner join mf.telefono t on c.dni=t.cliente)
  inner join mf.compañia comp on t.compañia=comp.cif
WHERE comp.nombre = 'Aotra' and t.tarifa = (select tarifa 
                                   from mf.telefono t inner join mf.tarifa using (tarifa,compañia)
                                   where t.numero = '654123321');

--S3.3 Mostrar, utilizando para ello una subcobsulta, el número de teléfono, fecha de contrato y tipo de los
--abonados que han llamado a teléfonos de clientes de fuera de la provincia de La Coruña durante el mes de
--octubre de 2006.

SELECT distinct tf.numero, tf.f_contrato,tf.tipo
from (mf.telefono tf inner join mf.llamada ll on tf.numero = ll.tf_origen)
WHERE TO_CHAR(ll.fecha_hora, 'mm/yy')= '10/06'
and  ll.tf_destino not in (SELECT tel.numero
                          from mf.telefono tel inner join mf.cliente c on c.dni=tel.cliente
                          where provincia = 'La Coruña')
order by tf.numero;

--S3.4 Se necesita conocer el nombre de los clientes que tienen teléfonos con tarifa “dúo” pero no “autónomos”.
--Utiliza subconsultas para obtener la solución.

select nombre
from mf.cliente
where dni in(select cliente
            from mf.telefono
            where tarifa = 'dúo')
and dni not in (select cliente
                from mf.telefono
                 where tarifa = 'autónomos');

--S3.5 Obtener mediante subconsultas los nombres de clientes y números de teléfono que aquellos que hicieron
--llamadas a teléfonos de la compañía Petafón pero no Aotra.

select cli.nombre, tf.numero
from mf.cliente cli inner join mf.telefono tf on cli.dni=tf.cliente
where tf.numero in (select distinct ll.tf_origen
                    from mf.llamada ll
                    where ll.tf_destino in (select tf.numero
                                            from mf.telefono tf inner join mf.compañia cia on tf.compañia=cia.cif
                                            where cia.nombre = 'Petafón'))
                    and tf.numero not in (select distinct ll.tf_origen
                                        from mf.llamada ll
                                        where ll.tf_destino in (select tf.numero
                                            from mf.telefono tf inner join mf.compañia cia on tf.compañia=cia.cif
                                            where cia.nombre = 'Aotra'));

--S3.6 Nombre de los clientes de la compañía Kietostar que hicieron las llamadas de mayor duración en
--septiembre de 2006

select clte.nombre, llam.tf_origen, llam.tf_destino, llam.duracion, to_char(llam.fecha_hora,'mm/yyyy') as Fecha, cia.nombre
from ((mf.cliente clte inner join mf.telefono tel on clte.dni=tel.cliente) 
        inner join mf.compañia cia on cia.cif=tel.compañia)
        inner join mf.llamada 11am on 11am.tf_origen=tel.numero  
where cia.nombre = 'Kietostar'  
    and to_char(llam.fecha_hora, 'mm/yyyy')= '09/2006'
    and llam.duracion >= all (select llam.duracion
                              from (mf.llamada ll inner join mf.telefono tel on llam.tf_origen=tel.numero)
                                    inner join mf.compañia cia on cia.cif=tel.compañia
                              where cia.nombre='Kietostar' and to_char(llam.fecha_hora, 'mm/yyyy')='09/2009');

--S3.7 Se necesita conocer el nombre de los clientes que tienen teléfonos con fecha de contratación anterior a
--alguno de los teléfonos de Ramón Martínez Sabina, excluido, claro, el propio Ramón Martínez Sabina.

select distinct c.nombre, t.numero, t.compañia, t.f_contrato
from mf.cliente c inner join mf.telefono t on c.dni=t.cliente
where c.nombre <> 'Ramón Martínez Sabina' and t.f_contrato < any (select t.f_contrato
                                                                  from mf.cliente c inner join mf.telefono t on c.dni=t.cliente
                                                                  where c.nombre = 'Ramón Martínez Sabina');
                                                                  
--S4.1 Utilizando consultas correlacionadas, mostrar el nombre de los abonados que han llamado el día ‘16/10/06’

select c.nombre
from mf.cliente c inner join mf.telefono t on c.dni=t.cliente
where exists (select *
              from mf.llamada ll
              where to_char(ll.fecha_hora, 'dd/mm/yy') = '16/10/06' and t.numero=ll.tf_origen);

/*S4.2 Utilizando consultas correlacionadas, obtener el nombre de los abonados que han realizado llamadas de
menos de 1 minuto y medio*/

select c.nombre
from mf.cliente c inner join mf.telefono t on c.dni=t.cliente
where exists (select distinct *
              from mf.llamada ll
              where ll.duracion < 90 and t.numero=ll.tf_origen);


/*S4.3 Utilizando consultas correlacionadas, obtener el nombre de los abonados de la compañía ‘KietoStar’ que no
hicieron ninguna llamada el mes de septiembre*/


select t.numero,c.nombre, cia.nombre
from (mf.cliente c inner join mf.telefono t on c.dni=t.cliente)
    inner join mf.compañia cia on cia.cif=t.compañia
where cia.nombre = 'Kietostar' and not exists (select *
                                            from mf.llamada ll
                                            where extract(month from ll.fecha_hora)= 9  and t.numero=ll.tf_origen);

/*S4.4 Utilizando consultas correlacionadas, mostrar todos los datos de los telefonos que hayan llamado al
número 654234234 pero no al 666789789*/

select *
from mf.telefono t
where exists 
(select distinct *
 from mf.llamada ll
 where tf_destino = '654234234' and t.numero=ll.tf_origen) 
 and  not exists (select *
                  from mf.llamada ll
                  where tf_destino = '666789789'  and t.numero=ll.tf_origen);

/*S4.5 Utilizando consultas correlacionadas, obtener el nombre y número de teléfono de los clientes de la
compañía Kietostar que no han hecho llamadas a otros teléfonos de la misma compañía*/

select c.nombre, t.numero
from (mf.cliente c inner join mf.telefono t on c.dni=t.cliente)
    inner join mf.compañia cia on cia.cif=t.compañia
where cia.nombre = 'Kietostar' and not exists (select *
                                              from (mf.llamada ll inner join mf.telefono tel on tel.numero=ll.tf_destino) inner join mf.compañia comp on comp.cif=tel.compañia
                                               where comp.nombre = 'Kietostar' and t.numero=ll.tf_origen);


--S5.1 Mostrar la compañía con la que se realizaron más llamadas durante el día 16/10/06

select cia.nombre, count(*) Num_llamadas
from (mf.compañia cia inner join mf.telefono t on cia.cif=t.compañia) inner join mf.llamada ll on t.numero=ll.tf_origen
where to_char(ll.fecha_hora, 'dd/mm/yy') = '16/10/06'
group by cia.nombre
having count(*) = (select max(count(*))
                   from mf.llamada ll inner join mf.telefono t on t.numero=ll.tf_origen
                   where to_char(ll.fecha_hora, 'dd/mm/yy')= '16/10/06'
                   group by t.compañia);

/*S5.2 Obtener los números de teléfono y los nombres de los abonados que han llamado a todos los números a los
que se llamó desde el 654345345 en octubre de 2006*/
--no existe un teléfono al que se haya llamado desde el 654345345 en octubre de 2006, al que no se haya llamado desde el teléfono considerado

select t.numero, cia.nombre
from mf.cliente cia inner join mf.telefono t on cia.dni=t.cliente
where not exists(select*
                from mf.llamada llam1
                where llam1.tf_origen='654345345' and to_char(llam1.fecha_hora, 'mm/yyyy') = '10/2006'
                AND not exists (select*
                                from mf.llamada llam2
                                where llam2.tf_origen=t.numero and llam2.tf_destino=llam1.tf_destino
                                and llam2.tf_origen <> '654345345'));
                

/*S5.3 Mostrar el nombre de cada cliente junto con coste total de las llamadas que realiza con cada compañia. El
resultado debe mostrarse ordenado descendentemente por cliente y ascendentemente por compañia*/

select c.nombre as Cliente, cia.nombre as Compañia, SUM(ll.duracion/60*t.coste) as CosteTotal
from (mf.cliente c inner join mf.telefono tf on tf.cliente=c.dni)
     inner join mf.tarifa t on t.tarifa=tf.tarifa and t.compañia=tf.compañia
     inner join mf.compañia cia on cia.cif=t.compañia
     inner join mf.llamada ll on ll.tf_origen=tf.numero
group by c.nombre,cia.nombre
order by Cliente desc, Compañia asc;

/*S5.4 Para cada cliente residente en la provincia de 'La Coruña', mostrar la duración de todas las llamadas
realizadas a clientes residentes en 'Jaén'*/

select c.nombre Cliente, sum(ll.duracion) Total
from (mf.cliente c inner join mf.telefono t on t.cliente=c.dni) inner join mf.llamada ll on t.numero=ll.tf_origen
where ll.tf_origen in (select t.numero
                       from (mf.cliente c inner join mf.telefono t on t.cliente=c.dni)
                       where c.provincia= 'La Coruña'
                       )
and ll.tf_destino in  (select t.numero
                       from (mf.cliente c inner join mf.telefono t on t.cliente=c.dni)
                       where c.provincia = 'Jaén'
                       )
group by c.nombre;


--S5.5 Mostrar los nombres de todos los clientes que hayan realizado más de 5 llamadas

select c.nombre,count(*)
from (mf.cliente c inner join mf.telefono t on t.cliente=c.dni)inner join mf.llamada ll on t.numero=ll.tf_origen
group by c.nombre
having count(*)>5;

/*S5.6 Mostrar el nombre de aquellos clientes que hayan contratado con cualquier compañía, de media, una tarifa
superior a la tarifa media total.*/

select c.nombre Cliente, avg(t.coste) Media
from (mf.cliente c inner join mf.telefono tf on tf.cliente=c.dni)inner join mf.tarifa t using(tarifa, compañia)
group by c.nombre
having avg(t.coste)>=(Select avg(t.coste) from mf.tarifa t);

/*S5.7 Mostrar los nombres de los clientes que hayan realizado llamadas a telefonos de la compañia 'Kietostar'
por un coste menor de 100€*/

select c.nombre Cliente
from ((mf.cliente c inner join mf.telefono tf on tf.cliente=c.dni)inner join mf.tarifa t using(tarifa, compañia))
     inner join mf.llamada ll on ll.tf_origen=tf.numero
where ll.tf_destino in (select tf.numero
                       from mf.telefono tf inner join mf.compañia cia on tf.compañia=cia.cif
                       where cia.nombre= 'Kietostar')
group by c.nombre
having sum((ll.duracion*t.coste)/60)<100;